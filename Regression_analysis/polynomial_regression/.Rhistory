)
print(anova_table)
summary(aov(velocity ~ distance))
anova(lm_galaxies)
# g) Diagnostics plots to evaluate the validity of the model
par(mfrow=c(2,2))
plot(lm_galaxies)
# -------------- Linear regression through the origin --------------
# Fit regression model passing through the origin (it has no intercept)
model_origin <- lm(velocity ~ 0 + distance)  # The 0 in the formula ensures no intercept
summary(model_origin)
# Get estimated slope (beta_1) and standard error
beta1_hat <- slope #coef(model_origin)[1]
se_beta1 <- SE_slope #summary(model_origin)$coefficients[1, 2]
# Calculate SSE and MSE
velocity_hat_origin <- (beta1_hat * distance)
SSE_origin <- sum((velocity - velocity_hat_origin)^2)
MSE_origin <- SSE_origin / (n - 1)  # Degrees of freedom is n - 1 since we're only estimating beta1 (67084.59)
# Calculate standard error for beta1
SE_beta1 <- sqrt(MSE_origin / sum((distance - mean(distance))^2))
# Hypothesis test for beta1 != 0
t_value_beta1 <- beta1_hat / SE_beta1 #8.198575
p_value_beta1 <- 2 * pt(abs(t_value_beta1), df = n - 1, lower.tail = FALSE) #2.809103e-08
# 95% Confidence Interval for beta1
critical_value_95 <- qt(0.05/2, df = n - 2, lower.tail = FALSE)
lower_bound_beta1 <- beta1_hat - critical_value_95 * SE_beta1 # 56.91867
upper_bound_beta1 <- beta1_hat + critical_value_95 * SE_beta1 # 95.33525
# Results
cat("Estimated beta1:", beta1_hat, "\n")
cat("Standard Error for beta1:", SE_beta1, "\n")
cat("t-value for beta1:", t_value_beta1, "\n")
cat("p-value for beta1:", p_value_beta1, "\n")
cat("95% Confidence Interval for beta1: [", lower_bound_beta1, ", ", upper_bound_beta1, "]\n")
# Plot the scatter plot and regression line (no intercept)
par(mfrow=c(1,1))
plot(distance, velocity, main = "Distance vs velocity of galaxies with SLR",
xlab = "Distance (Mpc)", ylab = "Velocity (Km/s)", pch = 19, col = "green4",
ylim=c(0,max(velocity) + 2), xlim=c(0,25))
abline(a=0,b=slope, col = "red", lwd = 2, lty = 2)  # Add regression line
grid(col="gray44")
# Plot the model
par(mfrow=c(1,1))
plot(x=distance, y=velocity, main="Linear Regression Model",
xlab="Distance (Mpc)", ylab="Velocity (Km/s)",pch = 19, col = "green4",
ylim=c(0,max(velocity) + 2), xlim=c(0,25))
subtitle <- TeX("$\\widehat{y} = 76.12696 x$")
mtext(subtitle, side = 3.2, outer = TRUE, line = -4, font = 1, cex = 0.9)
abline(a=0, b=slope, col="red", lty=2, lwd=2)
grid(col="gray44")
# Check residuals and fit diagnostics
par(mfrow = c(2, 2))
plot(model_origin)
# Constants
Mpc <- 3.09 * 10^19  # in km
ysec <- 60^2 * 24 * 365.25  # seconds in a year
# Convert Hubble's constant to the appropriate units
Mpcyear <- Mpc / ysec
age_universe_seconds <- 1 / (beta1_hat / Mpcyear)
# Convert seconds to years
age_universe_years <- age_universe_seconds / (60 * 60 * 24 * 365.25)
cat("Approximate age of the universe: ", age_universe_years, " years\n")
# Parte extra
# Define a wider range of x values for smoother and larger bands
par(mfrow=c(1,1))
x_values_extended <- seq(min(distance) - 5, max(distance) + 5, length.out = 100)
y_hat_values_origin <- (slope * x_values)
# Recalculate standard errors for the extended range
se_band_mean_extended <- sqrt(MSE) * sqrt((1/n) + (x_values_extended - distance_mean)^2 / SXX)
se_band_pred_extended <- sqrt(MSE) * sqrt(1 + (1/n) + (x_values_extended - distance_mean)^2 / SXX)
# Compute new confidence and prediction bands
y_hat_extended <- (slope * x_values_extended) + intercept
low_band_mean_extended <- y_hat_extended - critical_value_10 * se_band_mean_extended
up_band_mean_extended <- y_hat_extended + critical_value_10 * se_band_mean_extended
low_band_pred_extended <- y_hat_extended - critical_value_10 * se_band_pred_extended
up_band_pred_extended <- y_hat_extended + critical_value_10 * se_band_pred_extended
# Plot with the extended x-range
plot(distance, velocity, main = "Confidence and prediction bands for velocity",
xlab = "Distance (Mpc)", ylab = "Velocity (Km/s)", xlim = range(x_values_extended))
abline(a = 0, b = slope, col = "red", lty = 2, lwd = 2)
# Add extended confidence and prediction bands
lines(x_values_extended, low_band_mean_extended, col = "green4", lty = 2, lwd = 2)
lines(x_values_extended, up_band_mean_extended, col = "green4", lty = 2, lwd = 2)
lines(x_values_extended, low_band_pred_extended, col = "blue", lty = 2, lwd = 2)
lines(x_values_extended, up_band_pred_extended, col = "blue", lty = 2, lwd = 2)
# Add original specific points
points(x = x_values, y = y_hat_values_origin, col="darkred", pch=16, type="p")
# Legend
legend("topleft",
legend=c("Confidence bands for the mean", "Prediction bands", "Specific points"),
col=c("green4", "blue", "darkred"), lwd=2, box.lwd=0, cex=0.8,
lty=c(2, 2, NA), pch=c(NA, NA, 16))
# Check residuals and fit diagnostics
par(mfrow = c(2, 2))
plot(model_origin)
# Define a wider range of x values for smoother and larger bands
par(mfrow=c(1,1))
x_values_extended <- seq(min(distance) - 5, max(distance) + 5, length.out = 100)
y_hat_values_origin <- (slope * x_values)
# Legend
legend("topleft",
legend=c("Confidence bands for the mean", "Prediction bands", "Specific points"),
col=c("green4", "blue", "darkred"), lwd=2, box.lwd=0, cex=0.8,
lty=c(2, 2, NA), pch=c(NA, NA, 16))
# Define a wider range of x values for smoother and larger bands
par(mfrow=c(1,1))
x_values_extended <- seq(min(distance) - 5, max(distance) + 5, length.out = 100)
y_hat_values_origin <- (slope * x_values)
# Recalculate standard errors for the extended range
se_band_mean_extended <- sqrt(MSE) * sqrt((1/n) + (x_values_extended - distance_mean)^2 / SXX)
se_band_pred_extended <- sqrt(MSE) * sqrt(1 + (1/n) + (x_values_extended - distance_mean)^2 / SXX)
# Compute new confidence and prediction bands
y_hat_extended <- (slope * x_values_extended) + intercept
low_band_mean_extended <- y_hat_extended - critical_value_10 * se_band_mean_extended
up_band_mean_extended <- y_hat_extended + critical_value_10 * se_band_mean_extended
low_band_pred_extended <- y_hat_extended - critical_value_10 * se_band_pred_extended
up_band_pred_extended <- y_hat_extended + critical_value_10 * se_band_pred_extended
# Plot with the extended x-range
plot(distance, velocity, main = "Confidence and prediction bands for velocity",
xlab = "Distance (Mpc)", ylab = "Velocity (Km/s)", xlim = range(x_values_extended))
abline(a = 0, b = slope, col = "red", lty = 2, lwd = 2)
# Add extended confidence and prediction bands
lines(x_values_extended, low_band_mean_extended, col = "green4", lty = 2, lwd = 2)
lines(x_values_extended, up_band_mean_extended, col = "green4", lty = 2, lwd = 2)
lines(x_values_extended, low_band_pred_extended, col = "blue", lty = 2, lwd = 2)
lines(x_values_extended, up_band_pred_extended, col = "blue", lty = 2, lwd = 2)
# Add original specific points
points(x = x_values, y = y_hat_values_origin, col="darkred", pch=16, type="p")
# Legend
legend("topleft",
legend=c("Confidence bands for the mean", "Prediction bands", "Specific points"),
col=c("green4", "blue", "darkred"), lwd=2, box.lwd=0, cex=0.8,
lty=c(2, 2, NA), pch=c(NA, NA, 16))
# Plot the confidence and prediction bands
par(mfrow=c(1,1))
plot(distance, velocity, main = "Confidence and prediction intervals for velocity",
xlab = "Distance (Mpc)", ylab = "Velocity (Km/s)")
abline(a = intercept, b = slope, col = "red", lty = 2, lwd = 2)
# Add confidence bands (for the mean)
lines(x_values, low_band_mean, col = "green4", lty = 2, lwd = 2)
lines(x_values, up_band_mean, col = "green4", lty = 2, lwd = 2)
# Add prediction bands (for a single observation)
lines(x_values, low_band_pred, col = "blue", lty = 2, lwd = 2)
lines(x_values, up_band_pred, col = "blue", lty = 2, lwd = 2)
# Plotting specific points
points(x = x_values, y = y_hat_values, col="darkred", pch=16, type="p")
# Legend
legend("topleft",
legend=c("Confidence bands for the mean", "Prediction bands", "Specific points"),
col=c("green4", "blue", "darkred"), lwd=2, box.lwd=0, cex=0.8,
lty=c(2, 2, NA), pch=c(NA, NA, 16))
# Plot the confidence and prediction bands
par(mfrow=c(1,1))
plot(distance, velocity, main = "Confidence and prediction intervals for velocity",
xlab = "Distance (Mpc)", ylab = "Velocity (Km/s)")
abline(a = intercept, b = slope, col = "red", lty = 2, lwd = 2)
# Add confidence bands (for the mean)
lines(x_values, low_band_mean, col = "green4", lty = 2, lwd = 2)
lines(x_values, up_band_mean, col = "green4", lty = 2, lwd = 2)
# Add prediction bands (for a single observation)
lines(x_values, low_band_pred, col = "blue", lty = 2, lwd = 2)
lines(x_values, up_band_pred, col = "blue", lty = 2, lwd = 2)
# Plotting specific points
points(x = x_values, y = y_hat_values, col="darkred", pch=16, type="p")
# Legend
legend("topleft",
legend=c("Confidence bands for the mean", "Prediction bands", "Specific points"),
col=c("green4", "blue", "darkred"), lwd=2, box.lwd=0, cex=0.8,
lty=c(2, 2, NA), pch=c(NA, NA, 16))
# The critical value in the t distribution with n-2 dof is
conf_level_90 <- 0.90
sig_level_10 <- 1 - conf_level_90
critical_value_10 <- qt(sig_level_10/2, n-2, lower.tail = FALSE) # 1.75305
# Values in x
x_values <- c(5.5, 14.0, 20.8)
# Calculate the standard errors
se_band_mean <- sqrt(MSE) * sqrt((1/n) + (x_values - distance_mean)^2 / SXX)
se_band_pred <- sqrt(MSE) * sqrt(1 + (1/n) + (x_values - distance_mean)^2 / SXX)
# Calculate predicted velocity estimates (y_hat)
y_hat_values <- (slope * x_values) + intercept
# Calculate the confidence bands for the mean
low_band_mean <- y_hat_values - critical_value_10 * se_band_mean
up_band_mean <- y_hat_values + critical_value_10 * se_band_mean
# Calculate the prediction bands (for a single future observation)
low_band_pred <- y_hat_values - critical_value_10 * se_band_pred
up_band_pred <- y_hat_values + critical_value_10 * se_band_pred
# ** Plot the confidence and prediction bands **
par(mfrow=c(1,1))
# Define a wider range of x values for smoother and larger bands
x_values_extended <- seq(min(distance) - 5, max(distance) + 5, length.out = 100)
y_hat_values_origin <- (slope * x_values)
# Recalculate standard errors for the extended range
se_band_mean_extended <- sqrt(MSE) * sqrt((1/n) + (x_values_extended - distance_mean)^2 / SXX)
se_band_pred_extended <- sqrt(MSE) * sqrt(1 + (1/n) + (x_values_extended - distance_mean)^2 / SXX)
# Compute new confidence and prediction bands
y_hat_extended <- (slope * x_values_extended) + intercept
low_band_mean_extended <- y_hat_extended - critical_value_10 * se_band_mean_extended
up_band_mean_extended <- y_hat_extended + critical_value_10 * se_band_mean_extended
low_band_pred_extended <- y_hat_extended - critical_value_10 * se_band_pred_extended
up_band_pred_extended <- y_hat_extended + critical_value_10 * se_band_pred_extended
# Plot with the extended x-range
plot(distance, velocity, main = "Confidence and prediction bands for velocity",
xlab = "Distance (Mpc)", ylab = "Velocity (Km/s)", xlim = range(x_values_extended))
abline(a = 0, b = slope, col = "red", lty = 2, lwd = 2)
# Add extended confidence and prediction bands
lines(x_values_extended, low_band_mean_extended, col = "green4", lty = 2, lwd = 2)
lines(x_values_extended, up_band_mean_extended, col = "green4", lty = 2, lwd = 2)
lines(x_values_extended, low_band_pred_extended, col = "blue", lty = 2, lwd = 2)
lines(x_values_extended, up_band_pred_extended, col = "blue", lty = 2, lwd = 2)
# Add original specific points
points(x = x_values, y = y_hat_values_origin, col="darkred", pch=16, type="p")
# Legend
legend("topleft",
legend=c("Confidence bands for the mean", "Prediction bands", "Specific points"),
col=c("green4", "blue", "darkred"), lwd=2, box.lwd=0, cex=0.8,
lty=c(2, 2, NA), pch=c(NA, NA, 16))
# Load profsalary.txt file
profsalary_dts <- read.delim(file="profsalary.txt", header=TRUE)
setwd("~/GitHub/Applied-statistics/Regression_analysis/polynomial_regression")
# -------------- Polynomial regression --------------
# Load profsalary.txt file
profsalary_dts <- read.delim(file="profsalary.txt", header=TRUE)
profsalary_dts
### a) Build a simple linear regression model to explain the variable 'salary' (Y) in terms of the variable
# 'years of experience' (X).
x_experience <- profsalary_dts$Experience
y_salary <- profsalary_dts$Salary
lm_salary <- lm(y_salary ~ x_experience)
summary(lm_salary)
# Scatterplot alone
par(mfrow=c(1,1))
plot(x_experience, y_salary, xlab="Years of experience", ylab="Salary",
main="Years of experience vs Salary", col="blue")
grid()
# Add the regression line (case 1)
abline(a=48.50593, b=0.88345, col="red")
# Diagnostic plots
par(mfrow=c(2,2))
plot(lm_salary)
# It looks pretty normal, it has some bad residual vs leverage points
### b) Add another variable in the form of X2
# b.1) Plot the new model and check diagnostic plots
lm_salary_sq <- lm(Salary ~ poly(Experience, 2, raw=TRUE), data=profsalary_dts)
summary(lm_salary_sq)
beta0 <- 34.720498
beta1 <- 2.872275
beta2 <- -0.053316
# Scatterplot alone
par(mfrow=c(1,1))
plot(x_experience, y_salary, xlab="Years of experience", ylab="Salary",
main="Years of experience vs Salary", col="blue")
x_grid_sal <- seq(-1, 38, length.out=100)
#y_grid_sal <- (-0.053316 * x_grid_sal^2) + (2.872275 * x_grid_sal) + 34.720498
y_grid_sal <- (beta2 * x_grid_sal^2) + (beta1 * x_grid_sal) + beta0
lines(x_grid_sal, y_grid_sal, col="red")
grid()
# Diagnostic plots
par(mfrow=c(2,2))
plot(lm_salary_sq)
# b.2) ANOVA table
# Model predictions
salary_hat <- beta0 + beta1 * x_experience + beta2 * x_experience^2
# Degrees of freedom
n_sal <- length(y_salary)  # Sample size
p <- 2  # Two predictors: x_experience and x_experience^2
dof_regression <- p # Degrees of freedom for regression
dof_error <- n_sal - (p + 1) # Residual DOF (n - p - 1)
dof_total <- n_sal - 1# Total DOF (n - 1)
# Sum of Squares
SST <- sum((y_salary - mean(y_salary))^2)  # Total Sum of Squares
SS_reg <- sum((salary_hat - mean(y_salary))^2) # Sum of Squares due to regression
RSS <- sum((y_salary - salary_hat)^2) # Residual Sum of Squares
# Mean Squares
MSR <- SS_reg / dof_regression
MSE <- RSS / dof_error
# F-statistic
F_value <- MSR / MSE
# p-value
p_value <- pf(F_value, dof_regression, dof_error, lower.tail = FALSE)
# Create ANOVA DataFrame
anova_df <- data.frame(
Source = c("Regression", "Residual", "Total"),
Sum_square = c(SS_reg, RSS, SST),
DoF = c(dof_regression, dof_error, dof_total),
Mean_square = c(MSR, MSE, NA),
F_ratio = c(F_value, NA, NA),
p_value = c(p_value, NA, NA)
)
# Print ANOVA table
print(anova_df)
# Compare with function in ANOVA
anova(lm_salary_sq)
anova(lm_salary_sq, lm_salary)
# b1)
# Modelo nulo (solo la media de Salary)
lm_null <- lm(Salary ~ 1, data=profsalary_dts)
# Modelo cuadrático (con Experience y Experience²)
lm_salary_sq <- lm(Salary ~ Experience + I(Experience^2), data=profsalary_dts)
# Tabla ANOVA y prueba de hipótesis
anova(lm_null, lm_salary_sq)
# b2) Confidence intervals for the overall estimators
confidence_level <- 0.99
significance_level <- 1 - confidence_level
critical_value <- qt(significance_level/2, n_sal - 3, lower.tail = FALSE)
critical_value # 2.611403
beta0_low  <- beta0 - (critical_value * 0.828724)
beta0_up  <- beta0 + (critical_value * 0.828724)
beta1_low  <- beta1 - (critical_value * 0.095697)
beta1_up  <- beta1 + (critical_value * 0.095697)
beta2_low  <- beta2 - (critical_value * 0.002477)
beta2_up  <- beta2 + (critical_value * 0.002477)
# Print results
cat("Confidence Intervals (99% Confidence):\n")
cat("Beta0: [", beta0_low, ",", beta0_up, "]\n")
cat("Beta1: [", beta1_low, ",", beta1_up, "]\n")
cat("Beta2: [", beta2_low, ",", beta2_up, "]\n")
# b3) Compute Bonferroni-adjusted confidence intervals
bonferroni_intervals <- compute_bonferroni_ci(lm_salary_sq)
# b3) Compute Bonferroni-adjusted confidence intervals
bonferroni_intervals <- compute_bonferroni_ci(lm_salary_sq)
print(bonferroni_intervals)
# Plot regression curve
lines(x_grid_sal3, y_grid_sal3, col="red", lwd=2)
bonferroni_intervals <- compute_bonferroni_ci(lm_salary_sq)
# Load package to support latex characters
library("latex2exp")
summary(lm_salary_sq)
# Model predictions
subtitle <- TeX("$\\widehat{y}$ = beta2x + beta1x + beta0")
mtext(subtitle, side = 3.2, outer = TRUE, line = -4, font = 1, cex = 0.9)
salary_hat <- beta0 + beta1 * x_experience + beta2 * x_experience^2
# Model predictions
subtitle <- TeX("$\\widehat{y}$ = beta2 x + beta1 x + beta0")
mtext(subtitle, side = 3.2, outer = TRUE, line = -4, font = 1, cex = 0.9)
plot(summary(lm_salary))
plot(lm_salary)
# Scatterplot alone
par(mfrow=c(1,1))
plot(x_experience, y_salary, xlab="Years of experience", ylab="Salary",
main="Years of experience vs Salary", col="blue")
grid()
# Add the regression line (case 1)
abline(a=48.50593, b=0.88345, col="red")
# b.1) Plot the new model and check diagnostic plots
lm_salary_sq <- lm(Salary ~ poly(Experience, 2, raw=TRUE), data=profsalary_dts)
summary(lm_salary_sq)
# Scatterplot alone
par(mfrow=c(1,1))
plot(x_experience, y_salary, xlab="Years of experience", ylab="Salary",
main="Years of experience vs Salary", col="blue")
x_grid_sal <- seq(-1, 38, length.out=100)
#y_grid_sal <- (-0.053316 * x_grid_sal^2) + (2.872275 * x_grid_sal) + 34.720498
y_grid_sal <- (beta2 * x_grid_sal^2) + (beta1 * x_grid_sal) + beta0
lines(x_grid_sal, y_grid_sal, col="red")
grid()
# Scatterplot alone
par(mfrow=c(1,1))
subtitle <- TeX("$\\widehat{y}$ = " + beta2 + "x^2" + beta1 + "x" + beta0)
# Scatterplot alone
par(mfrow=c(1,1))
subtitle <- TeX(sprintf("$\\widehat{y}$ = %.3fx^2 + %.3fx + %.3f",
beta2, beta1, beta0))
mtext(subtitle, side = 3.2, outer = TRUE, line = -4, font = 1, cex = 0.9)
plot(x_experience, y_salary, xlab="Years of experience", ylab="Salary",
main="Years of experience vs Salary", col="blue")
x_grid_sal <- seq(-1, 38, length.out=100)
#y_grid_sal <- (-0.053316 * x_grid_sal^2) + (2.872275 * x_grid_sal) + 34.720498
y_grid_sal <- (beta2 * x_grid_sal^2) + (beta1 * x_grid_sal) + beta0
lines(x_grid_sal, y_grid_sal, col="red")
grid()
par(mfrow=c(1,1))
subtitle <- TeX(sprintf("$\\widehat{y}$ = %fx^2 + %fx + %f",
beta2, beta1, beta0))
mtext(subtitle, side = 3.2, outer = TRUE, line = -4, font = 1, cex = 0.9)
plot(x_experience, y_salary, xlab="Years of experience", ylab="Salary",
main="Years of experience vs Salary", col="blue")
x_grid_sal <- seq(-1, 38, length.out=100)
#y_grid_sal <- (-0.053316 * x_grid_sal^2) + (2.872275 * x_grid_sal) + 34.720498
y_grid_sal <- (beta2 * x_grid_sal^2) + (beta1 * x_grid_sal) + beta0
lines(x_grid_sal, y_grid_sal, col="red")
grid()
mtext(subtitle, side = 3.2, outer = TRUE, line = -4, font = 1, cex = 1)
mtext(subtitle, side = 3.2, outer = TRUE, line = -4, font = 0.5, cex = 1)
plot(x_experience, y_salary, xlab="Years of experience", ylab="Salary",
main="Years of experience vs Salary", col="blue")
subtitle <- TeX(sprintf("$\\widehat{y}$ = %fx^2 + %fx + %f",
beta2, beta1, beta0))
mtext(subtitle, side = 3.2, outer = TRUE, line = -4, font = 0.5, cex = 1)
mtext(subtitle, side = 3, outer = TRUE, line = -4, font = 0.5, cex = 1)
mtext(subtitle, side = 3, outer = TRUE, line = -4, font = 0.5, cex = 1)
mtext(subtitle, side = 2, outer = TRUE, line = -4, font = 0.5, cex = 1)
mtext(subtitle, side = 3, outer = TRUE, line = -4, font = 0.5, cex = 1)
mtext(subtitle, side = 3, outer = TRUE, line = -4, font = 0.6, cex = 1)
mtext(subtitle, side = 3, outer = TRUE, line = -4, font = 0.6, cex = 1.2)
mtext(subtitle, side = 3, outer = TRUE, line = -4, font = 0.6, cex = 0.9)
par(mfrow=c(1,1))
subtitle <- TeX(sprintf("$\\widehat{y}$ = %fx^2 + %fx + %f",
beta2, beta1, beta0))
mtext(subtitle, side = 3, outer = TRUE, line = -4, font = 0.6, cex = 0.9)
plot(x_experience, y_salary, xlab="Years of experience", ylab="Salary",
main="Years of experience vs Salary", col="blue")
x_grid_sal <- seq(-1, 38, length.out=100)
#y_grid_sal <- (-0.053316 * x_grid_sal^2) + (2.872275 * x_grid_sal) + 34.720498
y_grid_sal <- (beta2 * x_grid_sal^2) + (beta1 * x_grid_sal) + beta0
lines(x_grid_sal, y_grid_sal, col="red")
grid()
par(mfrow=c(1,1))
subtitle <- TeX(sprintf("$\\widehat{y}$ = %fx^2 + %fx + %f",
beta2, beta1, beta0))
mtext(subtitle, side = 3, outer = TRUE, line = -4, font = 0.6, cex = 0.9)
plot(x_experience, y_salary, xlab="Years of experience", ylab="Salary",
main="Years of experience vs Salary", col="blue")
x_grid_sal <- seq(-1, 38, length.out=100)
#y_grid_sal <- (-0.053316 * x_grid_sal^2) + (2.872275 * x_grid_sal) + 34.720498
y_grid_sal <- (beta2 * x_grid_sal^2) + (beta1 * x_grid_sal) + beta0
lines(x_grid_sal, y_grid_sal, col="red")
grid()
par(mfrow=c(1,1))
plot(x_experience, y_salary, xlab="Years of experience", ylab="Salary",
main="Years of experience vs Salary", col="blue")
subtitle <- TeX(sprintf("$\\widehat{y}$ = %fx^2 + %fx + %f",
beta2, beta1, beta0))
mtext(subtitle, side = 3, outer = TRUE, line = -4, font = 0.6, cex = 0.9)
x_grid_sal <- seq(-1, 38, length.out=100)
#y_grid_sal <- (-0.053316 * x_grid_sal^2) + (2.872275 * x_grid_sal) + 34.720498
y_grid_sal <- (beta2 * x_grid_sal^2) + (beta1 * x_grid_sal) + beta0
lines(x_grid_sal, y_grid_sal, col="red")
grid()
mtext(subtitle, side = 3, outer = TRUE, line = -10, font = 0.6, cex = 0.9)
subtitle <- TeX(sprintf("$\\widehat{y}$ = %fx^2 + %fx + %f $ \prescript{14}{2}{\mathbf{C}} $
?mtext
par(mfrow=c(1,1))
plot(x_experience, y_salary, xlab="Years of experience", ylab="Salary",
main="Years of experience vs Salary", col="blue")
subtitle <- TeX(sprintf("$\\widehat{y}$ = %fx^2 + %fx + %f",
beta2, beta1, beta0))
mtext(subtitle, side = 3, outer = TRUE, line = -4, font = 0.6, cex = 0.9, adj=1)
?mtext
x_grid_sal <- seq(-1, 38, length.out=100)
#y_grid_sal <- (-0.053316 * x_grid_sal^2) + (2.872275 * x_grid_sal) + 34.720498
y_grid_sal <- (beta2 * x_grid_sal^2) + (beta1 * x_grid_sal) + beta0
lines(x_grid_sal, y_grid_sal, col="red")
grid()
mtext(subtitle, side = 3, outer = TRUE, line = -4, font = 0.6, cex = 0.9, adj=2)
mtext(subtitle, side = 3, outer = TRUE, line = -4, font = 0.6, cex = 0.9, adj=0)
mtext(subtitle, side = 3, outer = TRUE, line = -4, font = 0.6, cex = 0.9, adj=0.5)
# Scatterplot alone
par(mfrow=c(1,1))
plot(x_experience, y_salary, xlab="Years of experience", ylab="Salary",
main="Years of experience vs Salary", col="blue")
subtitle <- TeX(sprintf("$\\widehat{y}$ = %fx^2 + %fx + %f",
beta2, beta1, beta0))
mtext(subtitle, side = 3, outer = TRUE, line = -4, font = 0.6, cex = 0.9, adj=0.5)
?mtext
x_grid_sal <- seq(-1, 38, length.out=100)
#y_grid_sal <- (-0.053316 * x_grid_sal^2) + (2.872275 * x_grid_sal) + 34.720498
y_grid_sal <- (beta2 * x_grid_sal^2) + (beta1 * x_grid_sal) + beta0
lines(x_grid_sal, y_grid_sal, col="red")
grid()
mtext(subtitle, side = 3, outer = TRUE, line = -4, font = 0.6, cex = 0.9, adj=0.6)
# Scatterplot alone
par(mfrow=c(1,1))
plot(x_experience, y_salary, xlab="Years of experience", ylab="Salary",
main="Years of experience vs Salary", col="blue")
subtitle <- TeX(sprintf("$\\widehat{y}$ = %fx^2 + %fx + %f",
beta2, beta1, beta0))
mtext(subtitle, side = 3, outer = TRUE, line = -4, font = 0.6, cex = 0.9, adj=0.55)
?mtext
x_grid_sal <- seq(-1, 38, length.out=100)
#y_grid_sal <- (-0.053316 * x_grid_sal^2) + (2.872275 * x_grid_sal) + 34.720498
y_grid_sal <- (beta2 * x_grid_sal^2) + (beta1 * x_grid_sal) + beta0
lines(x_grid_sal, y_grid_sal, col="red")
grid()
plot(x_experience, y_salary, xlab="Years of experience", ylab="Salary",
main="Years of experience vs Salary", col="blue", pch=16)
# Scatterplot alone
par(mfrow=c(1,1))
plot(x_experience, y_salary, xlab="Years of experience", ylab="Salary",
main="Years of experience vs Salary", col="blue", pch=16)
subtitle <- TeX(sprintf("$\\widehat{y}$ = %fx^2 + %fx + %f",
beta2, beta1, beta0))
mtext(subtitle, side = 3, outer = TRUE, line = -4, font = 0.6, cex = 0.9, adj=0.55)
?mtext
x_grid_sal <- seq(-1, 38, length.out=100)
#y_grid_sal <- (-0.053316 * x_grid_sal^2) + (2.872275 * x_grid_sal) + 34.720498
y_grid_sal <- (beta2 * x_grid_sal^2) + (beta1 * x_grid_sal) + beta0
lines(x_grid_sal, y_grid_sal, col="red")
grid()
# Scatterplot alone
par(mfrow=c(1,1))
plot(x_experience, y_salary, xlab="Years of experience", ylab="Salary",
main="Years of experience vs Salary", col="blue")
subtitle <- TeX(sprintf("$\\widehat{y}$ = %fx^2 + %fx + %f",
beta2, beta1, beta0))
mtext(subtitle, side = 3, outer = TRUE, line = -4, font = 0.6, cex = 0.9, adj=0.55)
?mtext
x_grid_sal <- seq(-1, 38, length.out=100)
#y_grid_sal <- (-0.053316 * x_grid_sal^2) + (2.872275 * x_grid_sal) + 34.720498
y_grid_sal <- (beta2 * x_grid_sal^2) + (beta1 * x_grid_sal) + beta0
lines(x_grid_sal, y_grid_sal, col="red")
grid()
summary(lm_salary)
# Scatterplot alone
par(mfrow=c(1,1))
plot(x_experience, y_salary, xlab="Years of experience", ylab="Salary",
main="Years of experience vs Salary", col="blue")
# Add subtitle
subtitle <- TeX("$\\widehat{y}$ = 0.88345x + 48.50593")
mtext(subtitle, side = 3, outer = TRUE, line = -4, font = 0.6, cex = 0.9, adj=0.55)
grid()
grid()
# Add the regression line (case 1)
abline(a=48.50593, b=0.88345, col="red")
